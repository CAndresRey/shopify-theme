<!-- eslint-disable max-len -->
{% style %}
    
    @font-face {
      font-family: 'Gilroy';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url('{{ 'Gilroy-Regular.woff2' | asset_url }}');
      src: url('{{ 'Gilroy-Regular.woff2' | asset_url }}') format('woff2'),
           url('{{ 'Gilroy-Regular.ttf' | asset_url }}') format('truetype'),
           url('{{ 'Gilroy-Regular.eot' | asset_url }}') format('eot');
    }

    @font-face {
      font-family: 'Gilroy';
      font-style: normal;
      font-weight: 600;
      font-display: swap;
      src: url('{{ 'Gilroy-SemiBold.woff2' | asset_url }}');
      src: url('{{ 'Gilroy-SemiBold.woff2' | asset_url }}') format('woff2'),
          url('{{ 'Gilroy-Semibold.ttf' | asset_url }}') format('truetype'),
          url('{{ 'Gilroy-SemiBold.eot' | asset_url }}') format('eot');
    }

    :root {
      --color-base-principal: rgba({{ settings.colors_brand.red }}, {{ settings.colors_brand.green }}, {{ settings.colors_brand.blue }});
      --color-base-text: {{ settings.colors_txt }};
      --color-base-title: {{ settings.colors_title }};
      --color-base-bg: {{ settings.colors_bg_1 }};
      --color-base-link: {{ settings.colors_link }};

      --color-btn-color-1: {{ settings.colors_btn_color_1 }};
      --color-btn-bg-1: {{ settings.colors_btn_bg_1 }};
      --color-btn-border-1: {{ settings.colors_btn_border_1 }};

      --color-btn-color-2: {{ settings.colors_btn_color_2 }};
      --color-btn-bg-2: {{ settings.colors_btn_bg_2 }};
      --color-btn-border-2: {{ settings.colors_btn_border_2 }};

      --color-btn-color-3: {{ settings.colors_btn_color_3 }};
      --color-btn-bg-3: {{ settings.colors_btn_bg_3 }};
      --color-btn-border-3: {{ settings.colors_btn_border_3 }};

      --color-btn-color-hover: {{ settings.colors_btn_color_hover }};
      --color-btn-bg-hover: {{ settings.colors_btn_bg_hover }};
      --color-btn-border-hover: {{ settings.colors_btn_border_hover }};
      --font-weight-body--bolder: 600;
    }

    {%- assign setting_color = settings.variant_color_textarea | newline_to_br | split: '<br />' -%}
    {% for color in setting_color %}
      {%- assign obj_color = color | split: ':' -%}
      .option_{{ obj_color | first | handleize }} {
        background-color: {{ obj_color | last }};
      }
    {% endfor %}

    {% if settings.enable_texture_option %}
      {%- assign setting_texture = settings.variant_images | newline_to_br | split: '<br />' %}

      {% for image_url in setting_texture -%}
        {%- assign obj_image = image_url | split: ':' -%}
        {%- assign variant_name = obj_image | first | handleize -%}
        {%- assign image_name = obj_image | last -%}

        {% for image in product.media %}
          {% if image.alt == image_name %}
            {% assign imgUrl = image | image_url %}

            .option_{{ variant_name }} {
              background-image: url({{ imgUrl }});
            }
          {% endif %}
        {% endfor %}
      {% endfor %}
    {% endif %}
{% endstyle %}
