{"version":3,"file":"faq.js","mappings":"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","sources":["webpack://theme-base-shopify/./node_modules/graditify-utils/src/index.js","webpack://theme-base-shopify/./node_modules/graditify-utils/src/utils/price.js","webpack://theme-base-shopify/./node_modules/graditify-utils/src/utils/query-selector.js","webpack://theme-base-shopify/./node_modules/graditify-utils/src/utils/to-html.js","webpack://theme-base-shopify/./node_modules/graditify-utils/src/utils/toggle-dataset.js","webpack://theme-base-shopify/webpack/bootstrap","webpack://theme-base-shopify/./assets/faq-section.core.js"],"sourcesContent":["const { formatMoney } = require(\"./utils/price\")\r\nconst { $Q, $Qll } = require(\"./utils/query-selector\")\r\nconst { stringToHTML } = require(\"./utils/to-html\")\r\nconst { toggleDataActive, dataToggle } = require(\"./utils/toggle-dataset\")\r\n\r\nmodule.exports = {\r\n  stringToHTML,\r\n  formatMoney,\r\n  toggleDataActive,\r\n  dataToggle,\r\n  $Q,\r\n  $Qll\r\n}","// eslint-disable-next-line no-template-curly-in-string\r\nconst moneyFormat = \"${{amount}}\";\r\n\r\nfunction defaultOption(opt, def) {\r\n  return typeof opt === \"undefined\" ? def : opt;\r\n}\r\n\r\n/* eslint-disable no-param-reassign */\r\n// eslint-disable-next-line max-params\r\nfunction formatWithDelimiters(number, precision, thousands, decimal) {\r\n  precision = defaultOption(precision, 2);\r\n  thousands = defaultOption(thousands, \".\");\r\n  decimal = defaultOption(decimal, \",\");\r\n\r\n  if (isNaN(number) || number == null) {\r\n    return 0;\r\n  }\r\n\r\n  number = (number / 100.0).toFixed(precision);\r\n\r\n  const parts = number.split(\".\");\r\n  const dollars = parts[0].replace(\r\n    /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g,\r\n    `$1${thousands}`,\r\n  );\r\n  const cents = parts[1] ? decimal + parts[1] : \"\";\r\n\r\n  return dollars + cents;\r\n}\r\n/* eslint-enable no-param-reassign */\r\n\r\nfunction caseHandler(element, cents) {\r\n  let value = \"\";\r\n\r\n  switch (element) {\r\n    case \"amount\":\r\n      value = formatWithDelimiters(cents, 2);\r\n      break;\r\n    case \"amount_no_decimals\":\r\n      value = formatWithDelimiters(cents, 0);\r\n      break;\r\n    case \"amount_with_comma_separator\":\r\n      value = formatWithDelimiters(cents, 2, \".\", \",\");\r\n      break;\r\n    case \"amount_no_decimals_with_comma_separator\":\r\n      value = formatWithDelimiters(cents, 0, \".\", \",\");\r\n      break;\r\n    default:\r\n      value = \"\"\r\n  }\r\n  return value\r\n}\r\n\r\nconst formatMoney = (cents, format) => {\r\n  if (typeof cents === \"string\") {\r\n     // eslint-disable-next-line no-param-reassign\r\n     cents = cents.replace(\".\", \"\");\r\n  }\r\n  const placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\r\n  const formatString = format || moneyFormat;\r\n\r\n  const value = caseHandler(formatString.match(placeholderRegex)[1], cents)\r\n\r\n  const price = formatString.replace(placeholderRegex, value);\r\n\r\n  return `${price.replace(\"$\", \"â‚¬\")} EUR`;\r\n}\r\n\r\nmodule.exports = {\r\n  formatMoney\r\n}\r\n","/**\r\n * Select all the nodes of the dom. you can indicate which one is the parent, otherwise it will be from the document\r\n * @param {String} nodes - ClassList with DOM reference\r\n * @param {HTMLElement} parent - Parent of nodes\r\n * @returns {Array} Array of nodes in DOM\r\n */\r\nconst $Qll = (\r\n  nodes,\r\n  parent) => [...(parent || document).querySelectorAll(nodes)]\r\n\r\n/**\r\n * Select one only node of the dom. you can indicate which one is the parent, otherwise it will be from the document\r\n * @param {HTMLElement} node - ClassName with DOM reference\r\n * @param {HTMLElement} parent - Parent of nodes\r\n * @returns {Node} Node in DOM\r\n */\r\nconst $Q = (node, parent) => (parent || document).querySelector(node)\r\n\r\nmodule.exports = {\r\n  $Qll,\r\n  $Q,\r\n}\r\n","/* eslint-disable no-undef */\r\nconst support = () => {\r\n\tif (!window.DOMParser) return false;\r\n\r\n\tconst parser = new DOMParser();\r\n\r\n  try {\r\n\t\tparser.parseFromString('x', 'text/html');\r\n\t} catch (err) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n/**\r\n * Convert a template string into HTML DOM nodes\r\n * @param  {String} str The template string\r\n * @return {Node}       The template HTML\r\n */\r\nconst stringToHTML = (str) => {\r\n\t// If DOMParser is supported, use it\r\n\tif (support()) {\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst doc = parser.parseFromString(str, 'text/html');\r\n\t\treturn doc.body;\r\n\t}\r\n\r\n\t// Otherwise, fallback to old-school method\r\n\tconst dom = document.createElement('div');\r\n\tdom.innerHTML = str;\r\n\treturn dom;\r\n}\r\n\r\nmodule.exports = {\r\n\tstringToHTML\r\n}","const { $Q } = require(\"./query-selector\");\r\n\r\n/**\r\n *\r\n * @param {String} id - ID from node manipulate\r\n * @param {Boolean} active - If modal active\r\n * @param {HTMLElement} node - Node to manipulate\r\n */\r\n const overlayActions = (id, active, node) => {\r\n  const idOverlay = `overlay--${id}`;\r\n  const parent = node.parentNode;\r\n\r\n  if (!active) {\r\n    // eslint-disable-next-line no-undef\r\n    const overlay = document.createElement(\"div\");\r\n\r\n    overlay.setAttribute(\"id\", idOverlay);\r\n    overlay.classList.add(\"overlay\");\r\n\r\n    parent.insertBefore(overlay, node);\r\n    // eslint-disable-next-line no-use-before-define\r\n    toggleDataActive(`#${idOverlay}`, `#${id}`, { overlay: true });\r\n  } else {\r\n    parent.removeChild($Q(`#${idOverlay}`));\r\n  }\r\n}\r\n\r\n/**\r\n * To validate state in dataset node\r\n */\r\n const isActive = ({ active }) => active === \"true\";\r\n\r\n/**\r\n* Data Toggle\r\n*\r\n* @param {HTMLElement} node - Node to manipulate\r\n* @param {Boolean} overlay - if used to a overlay\r\n*/\r\nfunction dataToggle(node, overlay) {\r\n  const { dataset, id } = node;\r\n  const active = isActive(dataset);\r\n\r\n  if (active) {\r\n    dataset.active = \"false\";\r\n  } else {\r\n    dataset.active = \"true\";\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-expressions\r\n  overlay && overlayActions(id, active, node);\r\n}\r\n\r\n/**\r\n * Data Active toggle\r\n *\r\n * @param {String} control - ID button control\r\n * @param {String} node - ID modal\r\n * @param {Object} config - Object with overlay, closeSelector\r\n */\r\nconst toggleDataActive = (control, node, config = {}) => {\r\n  if (!$Q(control)) return;\r\n  const { overlay, closeSelector } = config;\r\n\r\n  $Q(control).addEventListener(\"click\", () => {\r\n    dataToggle($Q(node), overlay);\r\n  });\r\n\r\n  // eslint-disable-next-line no-unused-expressions\r\n  closeSelector && $Q(closeSelector).addEventListener(\r\n    \"click\",\r\n    () => {\r\n      dataToggle($Q(node), overlay);\r\n    },\r\n  );\r\n}\r\n\r\nmodule.exports = {\r\n  toggleDataActive,\r\n  dataToggle\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* eslint-disable max-len */\r\nimport { $Q, $Qll } from \"graditify-utils\";\r\n\r\nconst menu = $Q('.categories-menu');\r\nconst menuItems = $Qll('.categories-menu__item');\r\n\r\n/**\r\n * Initializes the category menu event listener\r\n * for showing or hiding the blocks on click\r\n * If the screen size is less than 767px\r\n * the scrollTop function will be executed\r\n */\r\nexport const initEventCategory = () => {\r\n  if (!menu) return;\r\n  window.addEventListener('load', showMoreFAQ());\r\n\r\n  menuItems.forEach((item) => {\r\n    item.addEventListener('click', () => {\r\n      const sectionContainer = item.parentNode.parentNode;\r\n      cleanCategories(sectionContainer);\r\n      categoryClicked(item);\r\n      if (window.innerWidth < 767) {\r\n        scrollTop(sectionContainer.offsetTop);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Scrolls to a specific position on the page.\r\n * @param {number} toplock - The Y coordinate of the target element to scroll to.\r\n */\r\nconst scrollTop = (toplock) => {\r\n  window.scrollTo({top: toplock, behavior: 'smooth'});\r\n}\r\n\r\n/**\r\n * Removes 'isClicked' class from each '.categories-menu__item' element within the given section container,\r\n * and hides each '.categories-container' element.\r\n *\r\n * @param {HTMLElement} sectionContainer - The section container element that contains the categories to clean.\r\n */\r\nconst cleanCategories = (sectionContainer) => {\r\n  const items = $Qll('.categories-menu__item', sectionContainer);\r\n  items.forEach((item) => {\r\n    item.classList.remove('isClicked');\r\n\r\n  });\r\n\r\n  const content = $Qll('.categories-container', sectionContainer)\r\n  content.forEach((block) => {\r\n    block.classList.remove('show');\r\n    block.classList.add('hide');\r\n  });\r\n}\r\n\r\n/**\r\n * Adds the 'isClicked' class to the clicked menu item\r\n * @param {HTMLElement} item The clicked menu item element\r\n */\r\nconst categoryClicked = (item) => {\r\n  const dataHandle = item.dataset.handle;\r\n  item.classList.add('isClicked');\r\n  showContentClicked(dataHandle);\r\n}\r\n\r\n/**\r\n * Shows the content of the clicked menu item\r\n * @param {string} data The data handle of the clicked menu item\r\n */\r\nconst showContentClicked = (data) => {\r\n  const itemShowed = document.querySelector(`.categories-container[data-handle=\"${data}\"]`);\r\n  itemShowed.classList.remove('hide');\r\n  itemShowed.classList.add('show');\r\n  showMoreFAQ();\r\n}\r\n\r\n/**\r\n * Shows a \"read more\" link for long FAQ answers\r\n * and toggles the display of the full answer.\r\n * @returns {void}\r\n */\r\nconst showMoreFAQ = () => {\r\n  const readMoreText = 'VOIR PLUS';\r\n  const readLessText = 'VOIR MOINS';\r\n  const contentItems = document.querySelectorAll('.block-container__content');\r\n\r\n  contentItems.forEach((item) => {\r\n    const content = item.querySelector('.block-container__description').innerHTML;\r\n    if (!content.includes('<p>...</p>')) {\r\n      return;\r\n    }\r\n    const [content1, content2] = splitContent(content)\r\n    updateContent(item, content1, content2, readMoreText);\r\n\r\n    const dots = item.querySelectorAll('.dots');\r\n    dots.forEach((dot) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      dot.onclick = () => {\r\n        handleDotsClick(dot, readLessText, readMoreText);\r\n      };\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\nSplits the content of an FAQ answer if it contains a \"read more\" link.\r\n@param {string} content - The HTML content of an FAQ answer.\r\n@returns {string[]} An array with two strings:\r\nthe first part of the content and\r\nthe second part that will be hidden by the \"read more\" link (if it exists).\r\n*/\r\nconst splitContent = (content) => {\r\n    const [content1, content2] = content.split('<p>...</p>');\r\n    return [content1, content2];\r\n};\r\n\r\n/**\r\nUpdates the HTML of an FAQ answer to include the \"read more\" link.\r\n@param {HTMLElement} item - The FAQ item container element.\r\n@param {string} content1 - The first part of the answer content.\r\n@param {string} content2 - The second part of the answer content that will be hidden by the \"read more\" link.\r\n@param {string} readMoreText - The text to display in the \"read more\" link.\r\n@returns {void}\r\n*/\r\nconst updateContent = (item, content1, content2, readMoreText) => {\r\n  const description = item.querySelector('.block-container__description');\r\n  description.innerHTML = `\r\n    ${content1}\r\n    <span class=\"show\">${content2}</span>\r\n    <span class=\"dots\">${readMoreText}</span>\r\n  `;\r\n};\r\n\r\n/**\r\nToggles the display of the full FAQ answer when the \"read more\" link is clicked.\r\n@param {HTMLElement} dot - The \"read more\" link element.\r\n@param {string} readLessText - The text to display in the \"read less\" link.\r\n@returns {void}\r\n*/\r\nconst handleDotsClick = (dot, readLessText, readMoreText ) => {\r\n  const parentContent = dot.closest('.block-container__description');\r\n  const more = parentContent.querySelector('.show');\r\n  const less = parentContent.querySelector('.dots');\r\n  more.classList.toggle('show-less');\r\n  less.innerText = more.classList.contains('show-less') ? readLessText : readMoreText;\r\n};\r\n"],"names":["formatMoney","$Q","$Qll","stringToHTML","toggleDataActive","dataToggle","module","exports","defaultOption","opt","def","formatWithDelimiters","number","precision","thousands","decimal","isNaN","parts","toFixed","split","replace","cents","format","placeholderRegex","formatString","value","element","caseHandler","match","nodes","parent","document","querySelectorAll","node","querySelector","str","window","DOMParser","parser","parseFromString","err","support","body","dom","createElement","innerHTML","overlay","dataset","id","active","isActive","idOverlay","parentNode","removeChild","setAttribute","classList","add","insertBefore","overlayActions","control","config","closeSelector","addEventListener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","menu","menuItems","scrollTop","toplock","scrollTo","top","behavior","cleanCategories","sectionContainer","forEach","item","remove","block","categoryClicked","dataHandle","handle","showContentClicked","data","itemShowed","showMoreFAQ","readMoreText","content","includes","content1","content2","splitContent","updateContent","dot","onclick","handleDotsClick","readLessText","parentContent","closest","more","less","toggle","innerText","contains","innerWidth","offsetTop"],"sourceRoot":""}