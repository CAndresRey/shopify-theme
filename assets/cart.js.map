{"version":3,"file":"cart.js","mappings":"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","sources":["webpack://theme-base-shopify/webpack/bootstrap","webpack://theme-base-shopify/webpack/runtime/make namespace object","webpack://theme-base-shopify/./src/utils/query-selector.js","webpack://theme-base-shopify/./src/utils/script-defer.js","webpack://theme-base-shopify/./src/utils/add-script-tag.js","webpack://theme-base-shopify/./src/components/slider-component.js","webpack://theme-base-shopify/./src/utils/input-quantity.js","webpack://theme-base-shopify/./src/modules/cart/cart-item.js","webpack://theme-base-shopify/./src/modules/cart/cart-init.js","webpack://theme-base-shopify/./src/modules/cart/cart-bar-progress.js","webpack://theme-base-shopify/./src/templates/cart.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * @param {String} nodes - ClassList with DOM reference\r\n * @param {HTMLElement} parent - Parent of nodes\r\n * @returns {Array} Array of nodes in DOM\r\n */\r\nconst $Qll = (\r\n  nodes,\r\n  // eslint-disable-next-line no-undef\r\n  parent) => [...(parent || document).querySelectorAll(nodes)]\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} node - ClassName with DOM reference\r\n * @param {HTMLElement} parent - Parent of nodes\r\n * @returns {Node} Node in DOM\r\n */\r\n// eslint-disable-next-line no-undef\r\nconst $Q = (node, parent) => (parent || document).querySelector(node)\r\n\r\nexport {\r\n  $Qll,\r\n  $Q,\r\n}\r\n","/**\r\n * This function detects, by means of the observer,\r\n * the interception with the slider,\r\n * to load it, and then disconnects the observer for the corresponding element.\r\n * @param {Node} entries - element node html, container slider\r\n * @param {Event} observer - observer event\r\n * @param {Function} callback - function callback start slider\r\n */\r\nconst executeInterception = (\r\n  entries,\r\n  observer,\r\n  params,\r\n) => entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      params.callback();\r\n\r\n      if (params.unobserve) {\r\n        observer.unobserve(entry.target);\r\n      }\r\n    }\r\n})\r\n\r\n/**\r\n * Creates the interceptor for the node\r\n * indicated in the parameter indicated as slide\r\n * @param {Node} element - element container slider\r\n * @param {Function} callback - callback init slider\r\n */\r\nexport const createInterception = (\r\n  element,\r\n  callback,\r\n  options = { root: null, rootMargin: \"120px\", unobserve: true },\r\n) => {\r\n  const optionsRoot = options;\r\n  const unobserve = options.unobserve || false;\r\n\r\n  delete optionsRoot.unobserve;\r\n\r\n  const intersectionObserver = new\r\n    IntersectionObserver(\r\n      (entries, observer) => executeInterception(\r\n        entries, observer, { callback, unobserve }), optionsRoot);\r\n\r\n  intersectionObserver.observe(element);\r\n}\r\n","import { $Q } from \"./query-selector\";\r\n\r\n/**\r\nA function that adds a script tag to the document body.\r\n@param {string} script - The source URL of the script.\r\n@returns {void}\r\n*/\r\nexport const addTagScript = (script, reference) => {\r\n  if (!script || !reference) return;\r\n\r\n  const scriptTag = $Q(`#${reference}`);\r\n  if (scriptTag || window[`${reference}`]) {\r\n    return new Promise((resolve) => {\r\n      resolve(true);\r\n    });\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const scriptTag = document.createElement('script');\r\n    scriptTag.src = script;\r\n    scriptTag.setAttribute('id', reference);\r\n\r\n    scriptTag.onload = () => {\r\n      window[`${reference}`] = true;\r\n      resolve(true);\r\n    };\r\n\r\n    scriptTag.onerror = () => {\r\n      reject(new Error(`Failed to load script ${src}`));\r\n    };\r\n\r\n    const theme = $Q('#MainContent');\r\n    theme.insertAdjacentElement('beforebegin', scriptTag);\r\n  });\r\n};\r\n\r\nexport const addSwiperScript = async (callback) => {\r\n  const scriptNode = $Q('#swiper-script-js');\r\n  if (!scriptNode) return;\r\n\r\n  const { dataset: { script } } = scriptNode;\r\n  const loadScript = await addTagScript(script, 'swiperScript');\r\n\r\n  if (loadScript && callback) {\r\n    callback();\r\n  }\r\n\r\n  return loadScript;\r\n}\r\n","/* eslint-disable max-len */\r\nimport { addSwiperScript } from '../utils/add-script-tag';\r\nimport { blackListSlider } from '../utils/blackListSlider';\r\nimport { $Q, $Qll } from '../utils/query-selector';\r\nimport { createInterception } from '../utils/script-defer';\r\n\r\n/**\r\n * Creates a slider using the Swiper library.\r\n * @param {Object} parent - An object containing the data necessary to build the slider.\r\n * @param {string} parent.slidesMobile - The number of slides to show on mobile devices.\r\n * @param {string} parent.slides - The number of slides to show on larger screens.\r\n * @param {string} parent.pagination - Whether or not to show pagination dots.\r\n * @param {string} parent.auto - Whether or not to automatically advance the slides.\r\n * @param {string} parent.speed - The time in milliseconds between automatic slide transitions.\r\n * @param {string} parent.script - The URL of an external script to load.\r\n * @param {string} parent.spacing - The amount of space between slides, in pixels.\r\n */\r\nexport const createSlider = (container) => {\r\n  const PAGE_ONE = 1;\r\n  const { slidesMobile, slides, pagination, navigation, auto, speed, spacing } =\r\n    container.dataset;\r\n\r\n  let swiperParams = {\r\n    slidesPerView: Number(slidesMobile),\r\n    spaceBetween: Number(spacing),\r\n    loop: auto === 'true',\r\n    ...(speed > 0 && {\r\n      autoplay: {\r\n        delay: Number(speed),\r\n        disableOnInteraction: false,\r\n      },\r\n    }),\r\n    breakpoints: {\r\n      640: {\r\n        slidesPerView:\r\n          Number(slides) === PAGE_ONE\r\n            ? Number(slides)\r\n            : Number(slidesMobile) + 1,\r\n      },\r\n      1024: {\r\n        slidesPerView: Number(slides),\r\n      },\r\n    },\r\n  };\r\n\r\n  if (navigation === 'true') {\r\n    swiperParams = loadNavigation(container, swiperParams);\r\n  }\r\n\r\n  if (pagination === 'true') {\r\n    swiperParams = loadPagination(container, swiperParams);\r\n  }\r\n\r\n  Object.assign(container, swiperParams);\r\n  return container.initialize();\r\n};\r\n\r\nconst loadPagination = (slider, params) => {\r\n  const paginationContainer = $Q('.swiper-pagination', slider.parentNode);\r\n  if (!paginationContainer || !params) return;\r\n\r\n  const mutationParams = Object.assign({}, params);\r\n\r\n  mutationParams['pagination'] = {\r\n    el: paginationContainer,\r\n  };\r\n\r\n  return mutationParams;\r\n};\r\n\r\nexport const loadNavigation = (slider, params) => {\r\n  const parent = slider.parentNode;\r\n  if ($Qll('.swiper-button', parent).length < 2 || !params) return;\r\n  const mutationParams = Object.assign({}, params);\r\n\r\n  const buttonNext = $Q('.swiper-button-next', parent);\r\n  const buttonPrev = $Q('.swiper-button-prev', parent);\r\n\r\n  mutationParams['navigation'] = {\r\n    nextEl: buttonNext,\r\n    prevEl: buttonPrev,\r\n  };\r\n\r\n  return mutationParams;\r\n};\r\n\r\n/**\r\nA function that loads sliders on a page by\r\ncreating an intersection observer for each slider container element.\r\n@returns {void}\r\n*/\r\nexport const loadSlider = () => {\r\n  const dataSliders = $Qll('.slider-js');\r\n  let loadingScript = false;\r\n\r\n  dataSliders.forEach((slider) => {\r\n    if (blackListSlider(slider)) return;\r\n\r\n    createInterception(slider, async () => {\r\n      if (!loadingScript) {\r\n        loadingScript = true;\r\n        await addSwiperScript();\r\n      }\r\n\r\n      return createSlider(slider);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * this script only select one slider predefine. example at doing click button\r\n * @param {Node} slider - node slider\r\n */\r\nexport const loadSliderByEvent = (slider) => {\r\n  createInterception(slider, async () => {\r\n    const loadScript = await addSwiperScript();\r\n\r\n    if (loadScript) {\r\n      createSlider(slider);\r\n    }\r\n  });\r\n};\r\n","import { $Q, $Qll } from \"./query-selector\";\r\n\r\n/**\r\n * add or subtract input value\r\n * @author Cristian Velasco\r\n */\r\n function updateQuantity() {\r\n\r\n  const input = $Q('input', this.parentElement)\r\n\r\n  if (this.dataset.action === \"subtr\") {\r\n    if (input.value > 0) input.value--\r\n  } else {\r\n    input.value++\r\n  }\r\n\r\n  return input.dispatchEvent(new Event(\"change\"));\r\n}\r\n\r\n/**\r\n  * Set quantity\r\n  * Set item quantity with custom input,\r\n  * Execute updateCart function\r\n* @author Cristian Velasco\r\n*/\r\nexport const setQuantity = (scope = null) => {\r\n  $Qll(\".quantity-label\", scope).forEach(\r\n    (labelParent) => $Qll('.button', labelParent)\r\n      .forEach((btn) => {\r\n        btn.addEventListener(\r\n          'click',\r\n          updateQuantity,\r\n        )\r\n      }),\r\n  )\r\n}\r\n","import { setQuantity } from \"../../utils/input-quantity\";\r\nimport { changeItem, deleteItem } from \"./cart\";\r\n\r\n/**\r\n * web component for item cart.\r\n * manage the variant change and add to cart events from here.\r\n * event delegation is used, this way we avoid having to reload the events\r\n * once a reload is done by section rendering.\r\n */\r\nclass ItemCart extends HTMLElement {\r\n  /**\r\n   * detect child elements within the web component.\r\n   */\r\n  connectedCallback() {\r\n    deleteItem(this);\r\n    changeItem(this);\r\n    setQuantity(this);\r\n  }\r\n\r\n  disconnectedCallback() {}\r\n}\r\n\r\nexport default ItemCart;\r\n","import { barProgress } from \"./cart-bar-progress\";\r\nimport { $Q } from \"../../utils/query-selector\"\r\nimport { createInterception } from \"../../utils/script-defer\";\r\nimport { btnAddToCart, openCloseCart } from \"./cart\";\r\nimport { loadSliderByEvent } from \"../../components/slider-component\";\r\nimport ItemCart from \"./cart-item\";\r\n\r\n/**\r\n * Cart initialization:\r\n * We work with interceptor to validate cart on viewport\r\n */\r\nconst initCart = () => {\r\n  openCloseCart();\r\n\r\n  const formAddFormUpsell = $Q(\".add-product-cart-upsell\");\r\n  const cart = $Q('#cart-items');\r\n\r\n  if (formAddFormUpsell) createInterception(formAddFormUpsell, () => btnAddToCart(\".add-product-cart-upsell\"));\r\n  if (cart) createInterception(cart, () => loadCartEvents());\r\n}\r\n\r\n/**\r\n * load cart events:\r\n * - Item cart\r\n * - Progress bar\r\n * - Upsell\r\n */\r\nconst loadCartEvents = () => {\r\n  if ($Q(\".slider-js.swiperElsidecart\")) loadSliderByEvent($Q(\".slider-js.swiperElsidecart\"));\r\n  window.customElements.define('item-cart', ItemCart);\r\n  barProgress($Q('#progress-bar-data'));\r\n}\r\n\r\nexport { initCart };\r\n","import { $Q } from '../../utils/query-selector'\r\n\r\n/**\r\n * Update the width of bar progress\r\n * @param {HTMLElement} input - input hidde with data\r\n */\r\nexport const barProgress = (input) => {\r\n  const totalPrice = parseFloat(input.dataset.total) / 100;\r\n  const limitPrice = input.dataset.limit;\r\n  const progress = $Q(\".bar-progress\");\r\n  const elementTotal = $Q('.total-residuary');\r\n\r\n  const textProgress = $Q('.progress-text-js');\r\n  const textFreeShipping = $Q('.shipping-free');\r\n\r\n  const barWidth = (totalPrice / limitPrice) * 100;\r\n  const residuaryPrice = limitPrice - totalPrice;\r\n\r\n  if (barWidth > 100) {\r\n    progress.style.width = \"100%\";\r\n    textProgress.style.display = \"none\";\r\n    textFreeShipping.style.display = \"block\";\r\n  } else {\r\n    progress.style.width = `${barWidth}%`;\r\n    elementTotal.innerHTML = `${residuaryPrice.toFixed()}€`;\r\n    textProgress.style.display = \"block\";\r\n    textFreeShipping.style.display = \"none\";\r\n  }\r\n}\r\n","import '../modules/cart/scss/style.scss'\r\nimport { initCart } from \"../modules/cart\";\r\n\r\ninitCart();\r\n"],"names":["__webpack_require__","exports","Symbol","toStringTag","Object","defineProperty","value","$Qll","nodes","parent","document","querySelectorAll","$Q","node","querySelector","createInterception","element","callback","options","root","rootMargin","unobserve","optionsRoot","IntersectionObserver","entries","observer","executeInterception","params","forEach","entry","isIntersecting","target","observe","addSwiperScript","async","scriptNode","dataset","script","loadScript","addTagScript","reference","window","Promise","resolve","reject","scriptTag","createElement","src","setAttribute","onload","onerror","Error","insertAdjacentElement","createSlider","container","slidesMobile","slides","pagination","navigation","auto","speed","spacing","swiperParams","slidesPerView","Number","spaceBetween","loop","autoplay","delay","disableOnInteraction","breakpoints","loadNavigation","loadPagination","assign","initialize","slider","paginationContainer","parentNode","mutationParams","el","length","buttonNext","buttonPrev","nextEl","prevEl","updateQuantity","input","this","parentElement","action","dispatchEvent","Event","ItemCart","HTMLElement","connectedCallback","deleteItem","changeItem","setQuantity","scope","labelParent","btn","addEventListener","disconnectedCallback","loadCartEvents","customElements","define","totalPrice","parseFloat","total","limitPrice","limit","progress","elementTotal","textProgress","textFreeShipping","barWidth","residuaryPrice","style","width","display","innerHTML","toFixed","barProgress","initCart","openCloseCart","formAddFormUpsell","cart","btnAddToCart"],"sourceRoot":""}