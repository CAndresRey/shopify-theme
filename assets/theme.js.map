{"version":3,"file":"theme.js","mappings":"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","sources":["webpack://theme-base-shopify/./src/utils/query-selector.js","webpack://theme-base-shopify/./src/utils/add-script-tag.js","webpack://theme-base-shopify/./src/utils/blackListSlider.js","webpack://theme-base-shopify/./src/utils/script-defer.js","webpack://theme-base-shopify/./src/components/slider-component.js","webpack://theme-base-shopify/./src/utils/toggle-dataset.js","webpack://theme-base-shopify/./src/components/news-letters.js","webpack://theme-base-shopify/./src/utils/validate-customer.js","webpack://theme-base-shopify/./src/utils/accordion.js","webpack://theme-base-shopify/./src/components/video-frame.js","webpack://theme-base-shopify/./src/components/window.js","webpack://theme-base-shopify/./src/components/header-footer-defer.js","webpack://theme-base-shopify/./src/templates/index.js","webpack://theme-base-shopify/./src/components/sections-defer.js","webpack://theme-base-shopify/./src/components/quiz.js"],"sourcesContent":["/**\r\n * @param {String} nodes - ClassList with DOM reference\r\n * @param {HTMLElement} parent - Parent of nodes\r\n * @returns {Array} Array of nodes in DOM\r\n */\r\nconst $Qll = (\r\n  nodes,\r\n  // eslint-disable-next-line no-undef\r\n  parent) => [...(parent || document).querySelectorAll(nodes)]\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} node - ClassName with DOM reference\r\n * @param {HTMLElement} parent - Parent of nodes\r\n * @returns {Node} Node in DOM\r\n */\r\n// eslint-disable-next-line no-undef\r\nconst $Q = (node, parent) => (parent || document).querySelector(node)\r\n\r\nexport {\r\n  $Qll,\r\n  $Q,\r\n}\r\n","import { $Q } from \"./query-selector\";\r\n\r\n/**\r\nA function that adds a script tag to the document body.\r\n@param {string} script - The source URL of the script.\r\n@returns {void}\r\n*/\r\nexport const addTagScript = (script, reference) => {\r\n  if (!script || !reference) return;\r\n\r\n  const scriptTag = $Q(`#${reference}`);\r\n  if (scriptTag || window[`${reference}`]) {\r\n    return new Promise((resolve) => {\r\n      resolve(true);\r\n    });\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const scriptTag = document.createElement('script');\r\n    scriptTag.src = script;\r\n    scriptTag.setAttribute('id', reference);\r\n\r\n    scriptTag.onload = () => {\r\n      window[`${reference}`] = true;\r\n      resolve(true);\r\n    };\r\n\r\n    scriptTag.onerror = () => {\r\n      reject(new Error(`Failed to load script ${src}`));\r\n    };\r\n\r\n    const theme = $Q('#MainContent');\r\n    theme.insertAdjacentElement('beforebegin', scriptTag);\r\n  });\r\n};\r\n\r\nexport const addSwiperScript = async (callback) => {\r\n  const scriptNode = $Q('#swiper-script-js');\r\n  if (!scriptNode) return;\r\n\r\n  const { dataset: { script } } = scriptNode;\r\n  const loadScript = await addTagScript(script, 'swiperScript');\r\n\r\n  if (loadScript && callback) {\r\n    callback();\r\n  }\r\n\r\n  return loadScript;\r\n}\r\n","/* add class selectors or id, parents, of the slider you want to ignore.\r\nnote that it must be the parent closest to your slider.\r\nThese sliders will be ignored when loading general\r\nsliders, or those you want to add via a click event. */\r\n\r\nconst parentSliderIgnore = [\"#upsell-js\", \".other\"];\r\n\r\n// eslint-disable-next-line max-len\r\nexport const blackListSlider = (slider) => parentSliderIgnore.some((exception) => slider.closest(exception))\r\n","/**\r\n * This function detects, by means of the observer,\r\n * the interception with the slider,\r\n * to load it, and then disconnects the observer for the corresponding element.\r\n * @param {Node} entries - element node html, container slider\r\n * @param {Event} observer - observer event\r\n * @param {Function} callback - function callback start slider\r\n */\r\nconst executeInterception = (\r\n  entries,\r\n  observer,\r\n  params,\r\n) => entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      params.callback();\r\n\r\n      if (params.unobserve) {\r\n        observer.unobserve(entry.target);\r\n      }\r\n    }\r\n})\r\n\r\n/**\r\n * Creates the interceptor for the node\r\n * indicated in the parameter indicated as slide\r\n * @param {Node} element - element container slider\r\n * @param {Function} callback - callback init slider\r\n */\r\nexport const createInterception = (\r\n  element,\r\n  callback,\r\n  options = { root: null, rootMargin: \"120px\", unobserve: true },\r\n) => {\r\n  const optionsRoot = options;\r\n  const unobserve = options.unobserve || false;\r\n\r\n  delete optionsRoot.unobserve;\r\n\r\n  const intersectionObserver = new\r\n    IntersectionObserver(\r\n      (entries, observer) => executeInterception(\r\n        entries, observer, { callback, unobserve }), optionsRoot);\r\n\r\n  intersectionObserver.observe(element);\r\n}\r\n","/* eslint-disable max-len */\r\nimport { addSwiperScript } from '../utils/add-script-tag';\r\nimport { blackListSlider } from '../utils/blackListSlider';\r\nimport { $Q, $Qll } from '../utils/query-selector';\r\nimport { createInterception } from '../utils/script-defer';\r\n\r\n/**\r\n * Creates a slider using the Swiper library.\r\n * @param {Object} parent - An object containing the data necessary to build the slider.\r\n * @param {string} parent.slidesMobile - The number of slides to show on mobile devices.\r\n * @param {string} parent.slides - The number of slides to show on larger screens.\r\n * @param {string} parent.pagination - Whether or not to show pagination dots.\r\n * @param {string} parent.auto - Whether or not to automatically advance the slides.\r\n * @param {string} parent.speed - The time in milliseconds between automatic slide transitions.\r\n * @param {string} parent.script - The URL of an external script to load.\r\n * @param {string} parent.spacing - The amount of space between slides, in pixels.\r\n */\r\nexport const createSlider = (container) => {\r\n  const PAGE_ONE = 1;\r\n  const { slidesMobile, slides, pagination, navigation, auto, speed, spacing } =\r\n    container.dataset;\r\n\r\n  let swiperParams = {\r\n    slidesPerView: Number(slidesMobile),\r\n    spaceBetween: Number(spacing),\r\n    loop: auto === 'true',\r\n    ...(speed > 0 && {\r\n      autoplay: {\r\n        delay: Number(speed),\r\n        disableOnInteraction: false,\r\n      },\r\n    }),\r\n    breakpoints: {\r\n      640: {\r\n        slidesPerView:\r\n          Number(slides) === PAGE_ONE\r\n            ? Number(slides)\r\n            : Number(slidesMobile) + 1,\r\n      },\r\n      1024: {\r\n        slidesPerView: Number(slides),\r\n      },\r\n    },\r\n  };\r\n\r\n  if (navigation === 'true') {\r\n    swiperParams = loadNavigation(container, swiperParams);\r\n  }\r\n\r\n  if (pagination === 'true') {\r\n    swiperParams = loadPagination(container, swiperParams);\r\n  }\r\n\r\n  Object.assign(container, swiperParams);\r\n  return container.initialize();\r\n};\r\n\r\nconst loadPagination = (slider, params) => {\r\n  const paginationContainer = $Q('.swiper-pagination', slider.parentNode);\r\n  if (!paginationContainer || !params) return;\r\n\r\n  const mutationParams = Object.assign({}, params);\r\n\r\n  mutationParams['pagination'] = {\r\n    el: paginationContainer,\r\n  };\r\n\r\n  return mutationParams;\r\n};\r\n\r\nexport const loadNavigation = (slider, params) => {\r\n  const parent = slider.parentNode;\r\n  if ($Qll('.swiper-button', parent).length < 2 || !params) return;\r\n  const mutationParams = Object.assign({}, params);\r\n\r\n  const buttonNext = $Q('.swiper-button-next', parent);\r\n  const buttonPrev = $Q('.swiper-button-prev', parent);\r\n\r\n  mutationParams['navigation'] = {\r\n    nextEl: buttonNext,\r\n    prevEl: buttonPrev,\r\n  };\r\n\r\n  return mutationParams;\r\n};\r\n\r\n/**\r\nA function that loads sliders on a page by\r\ncreating an intersection observer for each slider container element.\r\n@returns {void}\r\n*/\r\nexport const loadSlider = () => {\r\n  const dataSliders = $Qll('.slider-js');\r\n  let loadingScript = false;\r\n\r\n  dataSliders.forEach((slider) => {\r\n    if (blackListSlider(slider)) return;\r\n\r\n    createInterception(slider, async () => {\r\n      if (!loadingScript) {\r\n        loadingScript = true;\r\n        await addSwiperScript();\r\n      }\r\n\r\n      return createSlider(slider);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * this script only select one slider predefine. example at doing click button\r\n * @param {Node} slider - node slider\r\n */\r\nexport const loadSliderByEvent = (slider) => {\r\n  createInterception(slider, async () => {\r\n    const loadScript = await addSwiperScript();\r\n\r\n    if (loadScript) {\r\n      createSlider(slider);\r\n    }\r\n  });\r\n};\r\n","import { $Q } from \"./query-selector\"\r\n\r\n/**\r\n *\r\n * @param {String} id - ID from node manipulate\r\n * @param {Boolean} active - If modal active\r\n * @param {HTMLElement} node - Node to manipulate\r\n */\r\n const overlayActions = (id, active, node) => {\r\n  const idOverlay = `overlay--${id}`;\r\n  const parent = node.parentNode;\r\n\r\n  if (!active) {\r\n    // eslint-disable-next-line no-undef\r\n    const overlay = document.createElement(\"div\");\r\n\r\n    overlay.setAttribute(\"id\", idOverlay);\r\n    overlay.classList.add(\"overlay\");\r\n\r\n    parent.insertBefore(overlay, node);\r\n    // eslint-disable-next-line no-use-before-define\r\n    toggleDataActive(`#${idOverlay}`, `#${id}`, { overlay: true });\r\n  } else {\r\n    parent.removeChild($Q(`#${idOverlay}`));\r\n  }\r\n}\r\n\r\n/**\r\n * To validate state in dataset node\r\n */\r\nexport const isActive = ({ active }) => active === \"true\";\r\n\r\n/**\r\n* Data Toggle\r\n*\r\n* @param {HTMLElement} node - Node to manipulate\r\n* @param {Boolean} overlay - if used to a overlay\r\n*/\r\nexport function dataToggle(node, overlay) {\r\n\r\n  const { dataset, id } = node;\r\n  const active = isActive(dataset);\r\n\r\n  if (active) {\r\n    dataset.active = \"false\";\r\n  } else {\r\n    dataset.active = \"true\";\r\n  }\r\n\r\n  if (overlay) overlayActions(id, active, node);\r\n}\r\n/**\r\n * Data Active toggle\r\n *\r\n * @param {String} control - ID button control\r\n * @param {String} node - ID modal\r\n * @param {Object} config - Object with overlay, closeSelector\r\n */\r\n export const toggleDataActive = (control, node, config = {}) => {\r\n  const { overlay, closeSelector, video } = config;\r\n\r\n  $Q(control).addEventListener(\"click\", () => {\r\n    dataToggle($Q(node), overlay, video)\r\n  });\r\n\r\n  if (closeSelector) {\r\n    $Q(closeSelector).addEventListener(\r\n      \"click\",\r\n      () => dataToggle($Q(node), overlay),\r\n    )\r\n  }\r\n}\r\n","import { $Q } from \"../utils/query-selector\";\r\nimport { validateRegisterCustomer } from \"../utils/validate-customer\"\r\n\r\nexport const isRegisteredUser = () => {\r\n  // eslint-disable-next-line no-undef\r\n  const isRegistered = validateRegisterCustomer();\r\n\r\n  if (isRegistered) {\r\n    $Q('.error-js').style.display = \"block\";\r\n    $Q('input[type=\"email\"]').value = \"\";\r\n  }\r\n}\r\n","export const validateRegisterCustomer = () => {\r\n  // eslint-disable-next-line no-undef\r\n  const queryUrl = window.location.href;\r\n\r\n  return queryUrl.includes('form_type=customer');\r\n}\r\n","import { $Qll } from \"./query-selector\";\r\nimport { dataToggle } from \"./toggle-dataset\";\r\n\r\n/**\r\n * Loop to change all dataset active in button accordions\r\n *\r\n * @param {String} nodeAll - Reference to search in parent element\r\n * @param {HTMLElement} parent - Parent to valuate\r\n * @returns Action to change dataset active to 'false' at all buttons\r\n */\r\n export function closeAll(nodeAll, parent) {\r\n  return $Qll(nodeAll, parent)\r\n    .forEach((node) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      node.children[0].dataset.active = 'false'\r\n    })\r\n}\r\n\r\n/**\r\n * Accordion Action\r\n * This function change the dataset active in\r\n * button element accordion (on click event)\r\n *\r\n * @param {HTMLElement} element - Button to change data active\r\n * @param {NodeListOf} accordions - All accordions in DOM\r\n */\r\n function accordionAction(element, accordions) {\r\n\r\n  const EXIST_CLASS = element.classList.contains('accordion-item__button');\r\n  if (accordions.dataset.toggle === 'true' && EXIST_CLASS) {\r\n    closeAll('.accordion-item', accordions);\r\n  }\r\n\r\n  dataToggle(element);\r\n}\r\n\r\n/**\r\n * Open accordion\r\n * This function valuate all nodes with the class\r\n * \".accordions\" and add new event listener\r\n */\r\nexport function openAccordion() {\r\n  $Qll('.accordions').forEach(\r\n    (accordion) => {\r\n      $Qll('.accordion-item__button', accordion)\r\n        .forEach((item) => {\r\n          item.addEventListener(\r\n            'click',\r\n            () => {\r\n              accordionAction(item, accordion)\r\n            },\r\n          )\r\n        })\r\n    },\r\n  )\r\n}\r\n","import { $Q, $Qll } from '../utils/query-selector';\r\nimport { dataToggle, toggleDataActive } from '../utils/toggle-dataset';\r\n\r\n/**\r\n * Reset re-render DOM\r\n * @param {HTMLElement} modal - node content video frame\r\n */\r\nexport function resetVideo(modal) {\r\n  console.log(\"reset\");\r\n  const wrapper = modal;\r\n  wrapper.innerHTML = $Q('.video__modal-wrapper', modal).outerHTML;\r\n}\r\n\r\n/**\r\n * Init video section by id\r\n */\r\nexport const initVideoFrame = () => {\r\n  $Qll('.video__button').forEach((button) => {\r\n    const { dataset: { section } } = button;\r\n\r\n    toggleDataActive(\r\n      `#play-button-${section}-js`,\r\n      `#modal-video-${section}-js`,\r\n      {\r\n        overlay: true,\r\n        closeSelector: \".video__close\",\r\n      },\r\n    )\r\n  })\r\n\r\n  document.addEventListener(\"keydown\", (event) => {\r\n    if (event.code === \"Escape\") {\r\n\r\n      const modal = $Q(\".video__modal\");\r\n      if (modal.dataset.active === \"true\") {\r\n        dataToggle(modal, true)\r\n      }\r\n    }\r\n  });\r\n\r\n}\r\n","import { $Q, $Qll } from \"../utils/query-selector\";\r\nimport { toggleDataActive } from \"../utils/toggle-dataset\";\r\n\r\n/**\r\n * Init resource windows\r\n * @param {{ control: string, target: string }} params - Init parametres\r\n * @param {String} params.control - Reference controller the open modal window\r\n * @param {String} params.target - Reference of the modal window\r\n */\r\nconst initWindows = ({ control, target }) => {\r\n  windowsToggle(target);\r\n\r\n  toggleDataActive(\r\n    control,\r\n    target,\r\n    {\r\n      overlay: true,\r\n      closeSelector: '.window-close-js',\r\n    },\r\n  );\r\n}\r\n\r\n/**\r\n * Action on click item window\r\n *\r\n * @param {HTMLElement} scope - scope or parent target\r\n */\r\nconst windowsToggle = (scope) => {\r\n  const parentNode = $Q(scope);\r\n  const itemToggle = $Qll('.window-item-js', parentNode);\r\n  const layerItems = $Qll('.window-layer-close-js', parentNode)\r\n\r\n  itemToggle.forEach((item) => item.addEventListener('click',\r\n    () => {\r\n      item.setAttribute('data-active', 'true');\r\n    },\r\n  ))\r\n\r\n  layerItems.forEach((layeritem) => {\r\n    layeritem.addEventListener('click', () => {\r\n      const layer = layeritem.closest('.window-layer-js');\r\n      if (!layer) return null;\r\n      const sibling = layer.previousElementSibling;\r\n      sibling.setAttribute('data-active', 'false');\r\n    });\r\n  })\r\n}\r\n\r\nexport default initWindows;\r\n","import { $Q } from \"../utils/query-selector\";\r\nimport { createInterception } from \"../utils/script-defer\";\r\nimport { toggleDataActive } from \"../utils/toggle-dataset\";\r\nimport { isRegisteredUser } from \"./news-letters\";\r\n\r\nexport const headerFooterDefer = () => {\r\n  const formNewLetter = $Q(\"#NewsletterForm--footer\");\r\n\r\n  toggleDataActive(\"#burger-nav-js\", \"#nav-list-js\");\r\n\r\n  if (formNewLetter) {\r\n    createInterception(formNewLetter, () => isRegisteredUser());\r\n  }\r\n}\r\n","import \"../scss/main.scss\";\r\n\r\nimport { loadSlider } from \"../components/slider-component\";\r\nimport { headerFooterDefer } from \"../components/header-footer-defer\";\r\nimport { sectionsLoadDefer } from \"../components/sections-defer\";\r\nimport initWindows from \"../components/window\";\r\nimport { initializeQuiz } from \"../components/quiz\";\r\n\r\nheaderFooterDefer();\r\nloadSlider();\r\nsectionsLoadDefer();\r\ninitializeQuiz();\r\n\r\ninitWindows({\r\n  control: '#burger-nav-js',\r\n  target: '#nav-list-movil-js',\r\n});\r\n","import { openAccordion } from \"../utils/accordion\";\r\nimport { $Q } from \"../utils/query-selector\";\r\nimport { createInterception } from \"../utils/script-defer\";\r\nimport { initVideoFrame } from \"./video-frame\";\r\n\r\nexport const sectionsLoadDefer = () => {\r\n  const accordions = $Q(\".accordions\");\r\n  const videoModal = $Q(\".video__button\");\r\n\r\n  if (accordions) createInterception(accordions, () => openAccordion());\r\n  if (videoModal) createInterception(videoModal, () => initVideoFrame());\r\n}\r\n","export function initializeQuiz() {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        const sections = document.querySelectorAll('.quiz-section');\r\n        const nextButtons = document.querySelectorAll('.quiz-btn.quiz-next');\r\n        const prevButtons = document.querySelectorAll('.quiz-btn.quiz-prev');\r\n\r\n        nextButtons.forEach((button, index) => {\r\n            button.addEventListener('click', () => {\r\n                sections[index].style.display = 'none';\r\n                sections[index + 1].style.display = 'block';\r\n            });\r\n        });\r\n\r\n        prevButtons.forEach((button, index) => {\r\n            button.addEventListener('click', () => {\r\n                sections[index].style.display = 'none';\r\n                sections[index - 1].style.display = 'block';\r\n            });\r\n        });\r\n    });\r\n}\r\n"],"names":["$Qll","nodes","parent","document","querySelectorAll","$Q","node","querySelector","addSwiperScript","async","scriptNode","dataset","script","loadScript","addTagScript","reference","window","Promise","resolve","reject","scriptTag","createElement","src","setAttribute","onload","onerror","Error","insertAdjacentElement","callback","parentSliderIgnore","createInterception","element","options","root","rootMargin","unobserve","optionsRoot","IntersectionObserver","entries","observer","executeInterception","params","forEach","entry","isIntersecting","target","observe","createSlider","container","slidesMobile","slides","pagination","navigation","auto","speed","spacing","swiperParams","slidesPerView","Number","spaceBetween","loop","autoplay","delay","disableOnInteraction","breakpoints","loadNavigation","loadPagination","Object","assign","initialize","slider","paginationContainer","parentNode","mutationParams","el","length","buttonNext","buttonPrev","nextEl","prevEl","overlayActions","id","active","idOverlay","removeChild","overlay","classList","add","insertBefore","toggleDataActive","isActive","dataToggle","control","config","closeSelector","video","addEventListener","isRegisteredUser","location","href","includes","style","display","value","accordionAction","accordions","EXIST_CLASS","contains","toggle","children","windowsToggle","scope","itemToggle","layerItems","item","layeritem","layer","closest","previousElementSibling","initWindows","headerFooterDefer","formNewLetter","loadSlider","dataSliders","loadingScript","some","exception","blackListSlider","sectionsLoadDefer","videoModal","accordion","button","section","event","code","modal","sections","nextButtons","prevButtons","index"],"sourceRoot":""}